# application.yml - ?? ??
spring:
    profiles:
        active:local
    application:
        name:newsfeed-api
# Jackson ??
jackson:
    default-property-inclusion:non_null
    time-zone:Asia/Seoul
    date-format:yyyy-MM-dd'T'HH:mm:ss.SSSXXX
    serialization:
        write-dates-as-timestamps:false
    deserialization:
        fail-on-unknown-properties:false
# ?? ??
cache:
    type:redis
    redis:
        time-to-live:1800000 # 30? (???)
        cache-null-values:false
# Redis ??
data:
    redis:
        host:localhost
        port:6379
        database:0
        timeout:2000ms
        jedis:
            pool:
                max-active:10
                max-idle:10
                min-idle:1
                max-wait:2000ms
# ??? ??
servlet:
    multipart:
    max-file-size:100MB
    max-request-size:100MB
    file-size-threshold:2KB
# ?? ??
server:
    port:8080
    servlet:
        context-path:/
    compression:
        enabled:true
        mime-types:text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
        min-response-size:1024
    http2:
        enabled:true
# AWS ??
aws:
    region:ap-northeast-2
    dynamodb:
        endpoint:# ?? ????? ??

# JWT ??
jwt:
    secret:mySecretKey123456789mySecretKey123456789mySecretKey123456789
    expiration:86400000    # 24?? (???)
    refresh-expiration:2592000000  # 30? (???)
# ?????? ??
app:
    version:1.0.0
    upload:
    max-file-size:104857600 # 100MB
    allowed-file-types:jpg,jpeg,png,gif,mp4,mov
    rate-limit:
    requests-per-minute:100
    requests-per-hour:1000
# ?? ??
logging:
level:
com.newsfeed:INFO
org.springframework.security:DEBUG
org.springframework.cache:DEBUG
software.amazon.awssdk:WARN
org.springframework.data.redis:DEBUG
pattern:
console:"%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
file:"%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
file:
name:logs/newsfeed-api.log
max-size:10MB
max-history:30
# ????? ??
management:
endpoints:
web:
exposure:
include:health,info,metrics,prometheus,env
base-path:/actuator
endpoint:
health:
show-details:when-authorized
show-components:always
metrics:
export:
cloudwatch:
namespace:NewsFeed/API
batch-size:20
step:1m
enabled:true
health:
redis:
enabled:true
diskspace:
enabled:true
# Swagger ??
springdoc:
api-docs:
path:/v3/api-docs
swagger-ui:
path:/swagger-ui.html
display-request-duration:true
groups-order:DESC
operations-sorter:method
disable-swagger-default-url:true
use-root-path:true
show-actuator:true
---
# application-local.yml - ?? ?? ??
spring:
config:
activate:
on-profile:local
# ??? Redis ??
data:
redis:
host:localhost
port:6379
password:# ????? ???? ??
# ?? DynamoDB ??
aws:
region:ap-northeast-2
dynamodb:
endpoint:http://localhost:8000
# ??? JWT ??? (??????? ??? ??)
jwt:
secret:localDevelopmentSecretKeyForTestingPurposeOnly123456789
# ??? ?? ??
logging:
level:
com.newsfeed:DEBUG
org.springframework.web:DEBUG
org.springframework.security:DEBUG
---
# application-test.yml - ??? ??
spring:
config:
activate:
on-profile:test
data:
redis:
host:localhost
port:6379
database:1 # ???? DB
aws:
region:us-east-1
dynamodb:
endpoint:http://localhost:8000
jwt:
secret:testSecretKeyForUnitTestingPurposeOnly123456789
expiration:3600000    # 1??
logging:
level:
com.newsfeed:DEBUG
org.springframework.test:DEBUG
---
# application-prod.yml - ???? ??
spring:
config:
activate:
on-profile:prod
# ???? Redis ??
data:
redis:
host:${REDIS_HOST:newsfeed-redis.cache.amazonaws.com}
port:${REDIS_PORT:6379}
password:${REDIS_PASSWORD:}
ssl:true
timeout:3000ms
# ???? AWS ??
aws:
region:${AWS_REGION:ap-northeast-2}
# ?????? JWT ??? ??
jwt:
secret:${JWT_SECRET}
expiration:${JWT_EXPIRATION:86400000}
# ???? ??
logging:
level:
com.newsfeed:INFO
org.springframework:WARN
software.amazon.awssdk:ERROR
file:
name:/var/log/newsfeed/application.log
# ???? ???
management:
metrics:
export:
cloudwatch:
enabled:true
namespace:NewsFeed/Production
batch-size:20w