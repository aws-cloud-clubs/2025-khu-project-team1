service: follow-service

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-2

  environment:
    JWT_SECRET: ${env:JWT_SECRET}
    FOLLOW_TABLE: ${env:FOLLOW_TABLE}
    REDIS_HOST: ${env:REDIS_HOST}
    REDIS_PORT: ${env:REDIS_PORT}
    REDIS_PASSWORD: ${env:REDIS_PASSWORD}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:ap-northeast-2:*:*:table/${env:FOLLOW_TABLE}
            - arn:aws:dynamodb:ap-northeast-2:*:*:table/${env:FOLLOW_TABLE}/index/*

  vpc:
    securityGroupIds:
      - ${env:VPC_SECURITY_GROUP_ID}
    subnetIds:
      - ${env:VPC_SUBNET_ID_1}
      - ${env:VPC_SUBNET_ID_2}

plugins:
  - serverless-offline

functions:
  followUser:
    handler: handlers/follow.followUser
    events:
      - http:
          path: api/users/follow/{user_id}
          method: post
          cors: true

  unfollowUser:
    handler: handlers/follow.unfollowUser
    events:
      - http:
          path: api/users/follow/{user_id}
          method: delete
          cors: true

  getFollowing:
    handler: handlers/follow.getFollowing
    events:
      - http:
          path: api/users/following
          method: get
          cors: true

  getFollowers:
    handler: handlers/follow.getFollowers
    events:
      - http:
          path: api/users/followers
          method: get
          cors: true
